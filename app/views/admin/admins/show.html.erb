<div class="container">
  <div class="row">
    <div class="col-md-10 col-md-offset-1">

      <h1>未対応商品一覧</h1>

      <%=link_to "送料、消費税変更", edit_admin_postage_and_consumptiontaxs_path %>
<div class="infinite-scroll"></div>
      <% @orders.each do |order| %>
        <div class="row not-shipped-order">
          <div class="col-md-10 sol-md-offset-1">
            <table class="table table-bordered">
              <thead>
                <tr>
                  <th>タイトル</th>
                </tr>
              </thead>
              <tbody>

                <% order.order_products.each do |order_product| %>
                  <tr>
                    <td><%= order_product.product.title %></td>
                  </tr>
                <% end %>

              </tbody>
            </table>
         
            <p> 送付先名前 </p>
            <%= "#{order.delivery_name} 様" %><br>
            <p> 郵便番号 </p>
            <%= "〒 #{order.delivery_postal_code}" %><br>
            <%= "送付先住所 #{order.delivery_address}" %>
            <%= form_for(order, url: admin_order_path(order), method: "patch") do |f| %>
              <%= f.select :order_status_id, Order.order_status_ids.keys %>
              <%= f.submit "更新" %>
            <% end %>
             
            <div class="text-right">
              <%= link_to(admin_order_path(order)) do %>
                <button class="btn btn-success">この受注履歴詳細へ</button>
              <% end %>
            </div>
          </div>
        </div>  
      <% end %>

</div>

 <div class="paginate-admin-show">
          <%= paginate @orders %>
        </div>



    </div>
  </div>
</div>
    




<script>


$(function() {
// 使用する要素名
var IScontentItems = '.not-shipped-order'; // 取得する要素
var IScontent = '.infinite-scroll'; // 取得要素を追加するコンテンツ
var ISlink = 'a[rel=next]'; // 次のページのリンク
var ISlinkarea = '.paginate-admin-show'; // 次のページのリンクの親要素
var loadingFlag = false; // 読み込み中はtrueにして、複数回発生しないようにする

$(window).on('load scroll', function() {
// 次のページ読み込み中の場合は処理を行わない
if(!loadingFlag) {
var winHeight = $(window).height();
var scrollPos = $(window).scrollTop();
var linkPos = $(ISlink).offset().top;

if(winHeight + scrollPos > linkPos) {
loadingFlag = true;

// 次のページのリンクを取得して、要素を削除しておく
var nextPage = $(ISlink).attr('href');
$(ISlink).remove();
// 次のページの要素を取得
$.ajax({
type: 'GET',
url: nextPage,
dataType: 'html'
}).done(function(data) {
// 次のページのリンクを取得
var nextLink = $(data).find(ISlink);
// コンテンツ要素を取得
var contentItems = $(data).find(IScontentItems);

// コンテンツ要素を追加
$(IScontent).append(contentItems);

// 次のページがある場合はリンクを追加する
if(nextLink.length > 0) {
$(ISlinkarea).append(nextLink);
loadingFlag = false; // 次のページがない場合はloadingFlagをtrueにしたままにして、処理を発生しないようにする
}
}).fail(function () {
alert('ページの取得に失敗しました。');
});
}
}
});
});




</script>




